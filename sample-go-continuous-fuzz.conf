; Example configuration for go-continuous-fuzz.

; The default location for this file is in 
; ~/.go-continuous-fuzz/go-continuous-fuzz.conf on POSIX OSes,
; $LOCALAPPDATA/Go-continuous-fuzz/go-continuous-fuzz.conf on Windows,
; ~/Library/Application Support/Go-continuous-fuzz/go-continuous-fuzz.conf on Mac OS
; and $home/go-continuous-fuzz/go-continuous-fuzz.conf on Plan9.

[Application Options]

; The directory where logs are stored. The logs are auto-rotated by default.
; Rotated logs are compressed in place.
; Default:
;  On POSIX OSes:
;   logdir = ~/.go-continuous-fuzz/logs
;  On Windows:
;   logdir = $LOCALAPPDATA/Go-continuous-fuzz/logs
;  On Mac OS:
;   logdir = ~/Library/Application Support/Go-continuous-fuzz/logs
;  On Plan9:
;   logdir = $home/go-continuous-fuzz/logs
; Example:
;   logdir = ~/go-continuous-fuzz/logs


[Project]

; Absolute path to the directory for storing generated files.
; Default:
;   project.workspace-path =
; Example:
;   project.workspace-path = ~/go-continuous-fuzz

; Git URL of the project to fuzz.
; Default:
;   project.src-repo =
; Example:
;  For a private GitHub repository:
;   project.src-repo = https://oauth2:<PAT>@github.com/<OWNER>/<REPO>.git
;  For a public GitHub repository:
;   project.src-repo = https://github.com/<OWNER>/<REPO>.git

; Name of the S3 bucket where the seed corpus will be stored.
; Default:
;   project.s3-bucket-name =
; Example:
;   project.s3-bucket-name = corpus-bucket

[Fuzz Options]

; Git repository URL where issues are created for fuzz crashes.
; Default:
;   fuzz.crash-repo =
; Example:
;   fuzz.crash-repo = https://oauth2:<PAT>@github.com/<OWNER>/<REPO>.git

; Package path to fuzz. Setting multiple fuzz.pkgs-path= entries is allowed.
; Default:
;   fuzz.pkgs-path =
; Example (option can be specified multiple times):
;   fuzz.pkgs-path = /path/to/fuzz/pkg
; To fuzz the wtclient package inside watchtower, use the path from the project root:
;   fuzz.pkgs-path = watchtower/wtclient

; Duration between consecutive fuzzing cycles.
; Default:
;   fuzz.sync-frequency = 24h
; Example:
;   fuzz.sync-frequency = 30m

; Number of concurrent fuzzing workers (must be ≥1 and ≤ NumCPU).
; Default:
;   fuzz.num-workers = 1
; Example:
;   fuzz.num-workers = 8

; Interval between consecutive corpus minimizations.
; Default:
;   fuzz.corpus-minimize-interval = 7d
; Example:
;   fuzz.corpus-minimize-interval = 20h

; Number of fuzzing cycles to run (must be non-negative). 0 means to run forever.
; Default:
;   fuzz.iterations = 0
; Example:
;   fuzz.iterations = 5
